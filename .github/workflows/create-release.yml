name: Create Release

on:
  workflow_dispatch:
    inputs:
      tag_prefix:
        description: 'Tag prefix (optional)'
        required: false
        default: 'v'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.23

      - name: Build for multiple platforms
        run: |
          export GOOS=linux
          export GOARCH=amd64
          export CGO_ENABLED=0
          go build -o simpleNg.linux.amd64 .
          
          export GOOS=linux
          export GOARCH=arm64
          export CGO_ENABLED=0
          go build -o simpleNg.linux.arm64 .

          export GOOS=darwin
          export GOARCH=amd64
          go build -o simpleNg.darwin.amd64 .

          export GOOS=windows
          export GOARCH=amd64
          go build -o simpleNg.windows.amd64.exe .

      - name: Create tag with timestamp
        id: create_tag
        run: |
          TAG_NAME="${{ github.event.inputs.tag_prefix }}$(date -u +'%Y.%m%d.%H%M')"
          echo "::set-output name=tag_name::$TAG_NAME"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a $TAG_NAME -m "$(git log -1 --pretty=%B)"
          # git push origin $TAG_NAME

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tag_name }}
          release_name: Release ${{ steps.create_tag.outputs.tag_name }}
          body: |
            Automated release created by GitHub Actions.
            Commit message: $(git log -1 --pretty=%B)
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: |
            simpleNg.linux.amd64
            simpleNg.linux.arm64
            simpleNg.darwin.amd64
            simpleNg.windows.amd64.exe
          asset_name: |
            simpleNg.linux.amd64
            simpleNg.linux.arm64
            simpleNg.darwin.amd64
            simpleNg.windows.amd64.exe
          asset_content_type: application/octet-stream
